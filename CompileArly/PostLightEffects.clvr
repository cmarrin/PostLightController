// Arly script for different Post Light Controller effects
//

struct FlickerSpeedEntry
{
    float min;
    float max;
    int delay;
}

struct LedEntry
{
    float cur;
    float inc;
    float min;
    float max;
}

const float IncMin          0.004;
const float IncMax          0.04;
const float BrightnessMin   0.3;
const int NumPixels         8;
const int NumLevels         8;
const int PulseDelay        25;
const int PulseSpeedMult    35;

table FlickerSpeedEntry FlickerSpeedTable
{
    0.98 1.0  40
    0.98 1.0  30
    0.71 0.94 20
    0.59 0.78 20
    0.27 0.47 20
    0.08 0.31 20
    0.03 0.16 10
    0.01 0.02 10
}

var LedEntry leds 8;
var LedEntry* led;
var float flickerStepsMin;
var float flickerStepsMax;
var int flickerSpeedDelay;

//
// Constant effect
//

function constantInit()
{
	LoadColorParam(0, 0);
}

function int constantLoop()
{
	SetAllLights(0);
    return 20;
}

effect c 3 constantInit constantLoop;

//
// Pulse effect
//
function pulseInit()
{
	LoadColorParam(0, 0);
	
    led = &leds[0];
    
    led.max = LoadColorComp(0, 2);
    led.min = led.max - (Float(Param(4) + 1) / 8.0 * (led.max - BrightnessMin));
    led.inc = (led.max - led.min) / Float((NumLevels - Param(3)) * PulseSpeedMult);

    // Start with a random value for cur
    led.cur = RandomFloat(led.min, led.max);
}

function int pulseLoop()
{
    Animate(&leds[0]);

    led = &leds[0];
    StoreColorComp(0, 2, led.cur);
    SetAllLights(0);
    return PulseDelay;
}

effect p 5 pulseInit pulseLoop;

//
// Flicker effect
//
function flickerInit()
{
    var int speed;

	LoadColorParam(0, 0);
    InitArray(&leds, 0, NumPixels * 4);

    speed = Param(3);
    flickerStepsMin = FlickerSpeedTable[speed].min;
    flickerStepsMax = FlickerSpeedTable[speed].max;
    flickerSpeedDelay = FlickerSpeedTable[speed].delay;
}

function int flickerLoop()
{
    var int i;

    i = 0;
    foreach (i : NumPixels) {
        led = &leds[i];
        if (Animate(led)) {
            // We are done with the throb, select a new inc and lim
            // Increment inc value for each step a random amount
            led.cur = BrightnessMin;
            led.inc = RandomFloat(IncMin, IncMax);
        
            // Random number of steps to throb up and down
            led.min = BrightnessMin;
            led.max = led.inc + RandomFloat(flickerStepsMin, flickerStepsMax);
        }

        StoreColorComp(0, 2, led.cur);
        SetLight(i, 0);
    }
    
    return flickerSpeedDelay;
}

effect f 4 flickerInit flickerLoop;
